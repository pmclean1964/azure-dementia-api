name: Deploy Serverless Dementia API (Azure Functions)
on:
  push:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

env:
  AZURE_RESOURCE_GROUP: rg-dementia
  AZURE_REGION: eastus

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        working-directory: api
        run: npm ci

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy infra (Bicep)
        run: |
          if ! az group show --name "$AZURE_RESOURCE_GROUP" >/dev/null 2>&1; then
            echo "Creating $AZURE_RESOURCE_GROUP in $AZURE_REGION..."
            az group create --name "$AZURE_RESOURCE_GROUP" --location "$AZURE_REGION" --output none
          else
            echo "Resource group $AZURE_RESOURCE_GROUP already exists."
          fi
          az deployment group create -g "$AZURE_RESOURCE_GROUP" -f infrastructure/infra.bicep -p sqlDatabase='***'


      - name: Get Function App name
        id: getname
        run: |
          NAME=$(az deployment group list -g $AZURE_RESOURCE_GROUP --query "[0].properties.outputs.functionAppName.value" -o tsv)
          echo "name=$NAME" >> $GITHUB_OUTPUT

      - name: Zip package
        run: |
          cd api
          zip -r ../function.zip .

      - name: Deploy to Function App
        uses: azure/functions-action@v1
        with:
          app-name: ${{ steps.getname.outputs.name }}
          package: function.zip

      - name: Show URLs
        run: |
          URL=$(az deployment group list -g $AZURE_RESOURCE_GROUP --query "[0].properties.outputs.functionUrl.value" -o tsv)
          echo "Swagger UI: $URL/swagger"
          echo "Swagger JSON: $URL/swagger.json"
