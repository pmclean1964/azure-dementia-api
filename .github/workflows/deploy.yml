name: Deploy Serverless Dementia API (Azure Functions)

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  # App RG (where your Functions and other app resources live)
  AZURE_RESOURCE_GROUP: rg-dementia
  AZURE_REGION: eastus
  DATABASE_NAME: dementia
  KV_NAME: dementiadbsecrets

  # SQL server lives in a DIFFERENT RG:
  SQL_SERVER_RG: rg-sql-free-eastus2

concurrency:
  group: deploy-main
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Verify Azure CLI
        shell: bash
        run: |
          set -Eeuo pipefail
          az version
          az account show --query "{name:name, id:id, user:user.name}" -o table

      - name: Ensure app resource group exists (idempotent)
        shell: bash
        run: |
          set -Eeuo pipefail
          if ! az group show --name "$AZURE_RESOURCE_GROUP" >/dev/null 2>&1; then
            echo "Creating $AZURE_RESOURCE_GROUP in $AZURE_REGION..."
            az group create --name "$AZURE_RESOURCE_GROUP" --location "$AZURE_REGION" -o none
          else
            echo "Resource group $AZURE_RESOURCE_GROUP already exists."
          fi

      - name: Fetch DB settings from Key Vault (dementiadbsecrets)
        id: dbsecrets
        shell: bash
        run: |
          set -Eeuo pipefail
          echo "Reading DB connection data from Key Vault: $KV_NAME"
          FQDN=$(az keyvault secret show --vault-name "$KV_NAME" --name "db-fqdn" --query value -o tsv)
          DBNAME=$(az keyvault secret show --vault-name "$KV_NAME" --name "db-name" --query value -o tsv)
          DBLOGIN=$(az keyvault secret show --vault-name "$KV_NAME" --name "db-login" --query value -o tsv || true)
          DBPASS=$(az keyvault secret show --vault-name "$KV_NAME" --name "db-password" --query value -o tsv || true)
          DBRG=$(az keyvault secret show --vault-name "$KV_NAME" --name "db-resource-group" --query value -o tsv)

          if [ -z "$FQDN" ] || [ -z "$DBNAME" ] || [ -z "$DBRG" ]; then
            echo "Missing required Key Vault secrets (db-fqdn, db-name, db-resource-group)."
            exit 1
          fi

          echo "fqdn=$FQDN" >> "$GITHUB_OUTPUT"
          echo "dbname=$DBNAME" >> "$GITHUB_OUTPUT"
          echo "dbrg=$DBRG" >> "$GITHUB_OUTPUT"

          # Export to environment for subsequent steps
          echo "DATABASE_NAME=$DBNAME" >> "$GITHUB_ENV"
          echo "SQL_SERVER_RG=$DBRG" >> "$GITHUB_ENV"

      - name: Deploy infra (Bicep)
        shell: bash
        run: |
          set -Eeuo pipefail
          DEPLOYMENT_NAME=infra
          az deployment group create \
              -g "$AZURE_RESOURCE_GROUP" \
              -n "$DEPLOYMENT_NAME" \
              -f infrastructure/infra.bicep \
              -p apiKey="***" \
              sqlServerFqdn="${{ steps.dbsecrets.outputs.fqdn }}" \
              sqlDatabase="${{ steps.dbsecrets.outputs.dbname }}" \
              -o none


      - name: Get Function App name
        id: getname
        shell: bash
        run: |
          set -Eeuo pipefail
          DEPLOYMENT_NAME=infra
          NAME=$(az deployment group show \
            -g "$AZURE_RESOURCE_GROUP" \
            -n "$DEPLOYMENT_NAME" \
            --query "properties.outputs.functionAppName.value" -o tsv)
          echo "Function App: $NAME"
          echo "name=$NAME" >> "$GITHUB_OUTPUT"

      - name: Zip package
        shell: bash
        run: |
          set -Eeuo pipefail
          cd api
          zip -r ../function.zip .

      - name: Deploy to Function App
        uses: azure/functions-action@v1
        with:
          app-name: ${{ steps.getname.outputs.name }}
          package: function.zip

      - name: Show URLs
        shell: bash
        run: |
          set -Eeuo pipefail
          DEPLOYMENT_NAME=infra
          URL=$(az deployment group show \
            -g "$AZURE_RESOURCE_GROUP" \
            -n "$DEPLOYMENT_NAME" \
            --query "properties.outputs.functionUrl.value" -o tsv)
          echo "Swagger UI: $URL/swagger"
          echo "Swagger JSON: $URL/swagger.json"
